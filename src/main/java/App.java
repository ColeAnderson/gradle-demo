/*
 * This Java source file was generated by the Gradle 'init' task.
 */import java.util.*;


 import java.io.*;
 import java.util.Random;
 import java.util.concurrent.TimeUnit;
 
 import org.jsoup.Connection;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
 
 
 public class App {
 
     private final static String DUCKDUCKGO_SEARCH_URL = "https://duckduckgo.com/html/?q=";
 
     public static void main(String[] Args) {
         try {
             
            //System.out.println("Working Directory = " +
            //System.getProperty("user.dir"));
            //System.out.println(Args[0]);
            start();
             //new PostgreSQLJDBC();
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
 
     public static String generateQuery(String s){
         String[] words = s.split(" ");
         String query = "";
         for(int i=0; i<words.length-1; i++){
             if(words[i].equals("&")){   query+="%26+"; }
             else{   query+=words[i]+"+"; }
         }
         query+=words[words.length-1]+"&t=lm&ia=web";
         return query;
     }
 
     public static String getSearchResults(String query){
         Document doc = null;
         String s = "";
         String ret = "";
         try {
             //System.setProperty("http.proxyHost", "127.0.0.1"); //"192.168.5.1");
             //System.setProperty("http.proxyPort", "9050"); //"1080");
             Connection connection = Jsoup.connect(DUCKDUCKGO_SEARCH_URL + query)
                     .userAgent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2") //
                     .header("Content-Language", "en-US");
             ;
                     /** .proxy("127.0.0.1", 9050) //8080) // sets a HTTP proxy
                     .userAgent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2") //
                     .header("Content-Language", "en-US");
                     */
             //connection.userAgent("Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36");
             //connection.timeout(10000);
 
             doc = connection.get();
             Elements results = doc.getElementById("links").getElementsByClass("results_links");
 
             for(Element result: results){
 
                 Element title = result.getElementsByClass("links_main").first().getElementsByTag("a").first();
                 String fst, lst;
                 fst  = "/l/?kh=-1&uddg=https%3A%2F%2F";
                 lst = "%2F";
                 s = title.attr("href");
                 if(
                     s.contains("facebook") ||
                     s.contains("linkedin") ||
                     s.contains("youtube") 
                 ){
                    ret = s;
                    return ret;
                 }
                 // s = s.substring(29,s.length()-3);
                 String[] subs = s.split("%2F");
                 for(String w:subs){
                     if (
                         w.contains("companycheck") ||
                         w.contains("beta.companieshouse.gov.uk") ||
                         w.contains("endole")   ||
                         w.contains("www.checkdirector.co.uk") ||
                         w.contains("wikipedia") ||
                         w.contains("globaldatabase") 
                         || w.contains("bizdb")
                         || w.contains("companiesintheuk")
                      ){ break; }
                     if(w.contains(".com") || w.contains(".co.uk")){
                         s = w;
                         ret = w; break; 
                     }
                 }
                 //System.out.println("\nURL:" + title.attr("href"));
                 System.out.println("\nURL:" + s);
                 System.out.println("Title:" + title.text());
                 System.out.println("Snippet:" + result.getElementsByClass("result__snippet").first().text());
 
                 break;
             }
 
         } catch (IOException e) {
             e.printStackTrace();
             return "N/A network error";
         }
         return ret;
     }
 
     public static void start() throws IOException {
         String filename = System.getProperty("user.dir") + "/AllData/input.csv";
         
         //"/home/fahimfarhan/Codes/Friends/fahim-shikder/MISSION-21-10-18/urls.csv";
         File file = new File(filename);
         FileReader fr = new FileReader(file);
         BufferedReader br = new BufferedReader(fr);
 
         String outfilename = System.getProperty("user.dir") + "/AllData/output.csv";
         File fout = new File(outfilename);
 
         int startindx, endindx;
         startindx = 0; endindx = 3000;
         int count = 0;
         try{
             while(true){
                FileWriter fw = new FileWriter(fout, true);
                BufferedWriter bw = new BufferedWriter(fw);
        
                 count++;
                System.out.println(count);
 
                 String s = br.readLine();
                 if(s==null){    break; }
                 if(startindx<=count && count < endindx){
                     String[] words = s.split(";");
 
                     String res = "";
                     try{
                         String query = generateQuery(words[0]);
                         System.out.println(query);
                         res = getSearchResults(query);
                     }catch(Exception x){    res = x.toString(); }

                     String cname = words[0].toLowerCase();
                     cname = cname.toLowerCase();

                     Equations eqn = new Equations(cname);
                     int eqnNo = 0;
                     for(int i=1; i<9; i++){
                         if(i==3){  }
                         else{
                            String hypo = eqn.Factory(i);
                            if(res.contains(hypo)){
                                eqnNo = i;
                                break;
                            }
                         }
                         
                     }
 
                     bw.write(words[0]+";"+res+";"+Integer.toString(eqnNo)+";\n");
 
                     Random rand = new Random();
 
                     int  myrandnum = rand.nextInt(10) + 1;
                     TimeUnit.SECONDS.sleep(10+myrandnum);
 
 
                 }else if(count>=endindx){ break; }
                 // i = [4,10]
                 bw.close();
                 fw.close();
     
             
            }
         }catch (Exception x){x.printStackTrace();}
         finally{
             br.close();
             fr.close();
 
 
         }
 
 
 
     }
 
 }
